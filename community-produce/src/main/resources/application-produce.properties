#ServerProperties
#server.port=8080
server.servlet.context-path=

#具体看ThymeleafProperties
#在开发的时候最好关掉缓存，但是上线了要开，可以缓解服务器压力
spring.thymeleaf.cache=true

# DataSourceProperties  配置mysql数据库以及连接池
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/community?characterEncoding=utf-8&useSSL=false&serverTimezone=Hongkong
spring.datasource.username=root
spring.datasource.password=
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.hikari.maximum-pool-size=15
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=30000

# MybatisProperties  使用了自动生成id的机制
mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.type-aliases-package=com.nowcoder.community.entity
mybatis.configuration.useGeneratedKeys=true
mybatis.configuration.mapUnderscoreToCamelCase=true

#全部注释了是因为已经写了一个文件logback-spring.xml
#logger 日志 在调试的时候会有日志 这个是比debug级别高的都显示，包括debug级
#logging.level.com.nowcoder.community=debug
#把日志打印到具体目录
#logging.file.path=D:/javaproject/log/community.log

#Mail配置
spring.mail.username=
spring.mail.password=
spring.mail.host=smtp.qq.com
spring.mail.properties.mail.smtp.ssl.enable=true

#Community
community.path.domain=http://localhost:8080

#用户上传图像的路径
community.path.upload=/tmp/uploads

#redis
#11是随便选的一个库
spring.redis.database=11
spring.redis.host=localhost
spring.redis.port=6379

#kafka
#3000ms提交一次 也就是3s
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=community-consumer-group
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.auto-commit-interval=3000

#elasticsearch
#9200是http端口，9300是tcp端口
#spring.data.elasticsearch.cluster-name=nowcoder
#pring.data.elasticsearch.cluster-nodes=127.0.0.1:9300
elasticSearch.url=127.0.0.1:9200
#spring.elasticsearch.rest.uris=http://localhost:9200

#TaskExecution配置 spring的线程池配置
spring.task.execution.pool.core-size=5
spring.task.execution.pool.max-size=15
spring.task.execution.pool.queue-capacity=100

#TaskScheduling配置
spring.task.scheduling.pool.size=5

# QuartzProperties
#spring.quartz.properties.org.quartz.jobStore.class的配置和老师不一样，因为quartz升级了
spring.quartz.job-store-type=jdbc
spring.quartz.scheduler-name=communityScheduler
spring.quartz.properties.org.quartz.scheduler.instanceId=AUTO
spring.quartz.properties.org.quartz.jobStore.class=org.springframework.scheduling.quartz.LocalDataSourceJobStore
spring.quartz.properties.org.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.StdJDBCDelegate
spring.quartz.properties.org.quartz.jobStore.isClustered=true
spring.quartz.properties.org.quartz.threadPool.class=org.quartz.simpl.SimpleThreadPool
spring.quartz.properties.org.quartz.threadPool.threadCount=5

#wk  这个是自己写的 不属于任何一个框架自带
wk.image.command=/tmp/wkhtmltoimage.sh
wk.image.storage=/tmp/wk-images

#qiniu自定义的配置，为了方便调用
qiniu.key.access=
qiniu.key.secret=
qiniu.bucket.header.name=
qiniu.bucket.header.url=
qiniu.bucket.share.name=
qiniu.bucket.share.url=

#caffeine 是我们自定义的，不是这个工具要求的
#15页帖子，180秒清理
caffeine.posts.max-size=15
caffeine.posts.expire-seconds=180

#actuator
management.endpoints.web.exposure.include=*
management.endpoints.web.exposure.exclude=info,caches